class Solution {
    public int waysToReachStair(int k) {

        Map<String, Integer> map = new HashMap<>();
        return solve(1, 0, 1, k, map);
    }
    public int solve(int stair, int jump, int canJumpBack, int k, Map<String, Integer> map) {

        if(stair > k + 1) {
            return 0;
        } 
        int ways = 0;
        if(stair == k) {
            ways++;
        }

        String key = stair + "_" + jump + "_" + canJumpBack;
        if(map.containsKey(key)) {
            return map.get(key);
        }

        if(canJumpBack == 1) {
            ways += solve(stair - 1, jump, 0, k, map);
        }
        ways += solve(stair + (int)Math.pow(2, jump), jump + 1, 1, k, map);
        map.put(key, ways);
        return ways;
    }
}
